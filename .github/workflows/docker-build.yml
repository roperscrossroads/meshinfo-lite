name: Build, Push, and Publish Multi-Arch Manifest

on:
  workflow_dispatch:

jobs:
  build-and-push-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Calculate version
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Commit hash: $COMMIT_HASH"
          VERSION="${LATEST_TAG}-${COMMIT_HASH}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Build and push AMD64 Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ghcr.io/roperscrossroads/meshinfo-lite:latest-amd64
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }}-amd64
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }}-amd64
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64

  build-and-push-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Calculate version
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Commit hash: $COMMIT_HASH"
          VERSION="${LATEST_TAG}-${COMMIT_HASH}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Build and push ARM64 Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          provenance: false
          tags: |
            ghcr.io/roperscrossroads/meshinfo-lite:latest-arm64
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }}-arm64
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }}-arm64
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64

  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-and-push-amd64, build-and-push-arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate version
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Commit hash: $COMMIT_HASH"
          VERSION="${LATEST_TAG}-${COMMIT_HASH}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ghcr.io/roperscrossroads/meshinfo-lite:latest \
            ghcr.io/roperscrossroads/meshinfo-lite:latest-amd64 \
            ghcr.io/roperscrossroads/meshinfo-lite:latest-arm64
          docker manifest create ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }} \
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }}-amd64 \
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }}-arm64
          docker manifest create ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }} \
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }}-amd64 \
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }}-arm64
          docker manifest push ghcr.io/roperscrossroads/meshinfo-lite:latest
          docker manifest push ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }}
          docker manifest push ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }}
