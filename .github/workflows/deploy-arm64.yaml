name: Build and Push ARM64
on:
  workflow_dispatch:  # Only triggered manually
jobs:
  build-and-push-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
      
      - name: Calculate version
        id: version
        run: |
          # Get the latest git tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Get current commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Commit hash: $COMMIT_HASH"
          
          # Create version string
          VERSION="${LATEST_TAG}-${COMMIT_HASH}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push ARM64 Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          provenance: false
          tags: |
            ghcr.io/roperscrossroads/meshinfo-lite:latest-arm64
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.version }}-arm64
            ghcr.io/roperscrossroads/meshinfo-lite:${{ steps.version.outputs.latest_tag }}-arm64
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64 